buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
    }
}

plugins {
    id "org.jetbrains.kotlin.jvm" version "1.2.51"
    id "org.jlleitschuh.gradle.ktlint" version "2.3.0"
}

repositories {
    jcenter()
    mavenCentral()
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'jacoco'

bootRun {
    standardInput = System.in
}

test {
    useJUnitPlatform {
        includeEngines 'spek'
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

ktlint {
    version = "0.14.0"
    debug = false
    verbose = false
    android = false
    reporter = "checkstyle"
    ignoreFailures = false
}

configurations {
    testAgent {
        transitive = false
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    compile "org.springframework.boot:spring-boot-starter:$springBootVersion"

    testCompile "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    testCompile "org.junit.platform:junit-platform-runner:$junitPlatformVersion"
    testRuntime "org.junit.platform:junit-platform-console:$junitPlatformVersion"
    testCompile "com.nhaarman:mockito-kotlin:1.6.0"
    testCompile("org.jetbrains.spek:spek-api:$spekVersion") {
        exclude group: 'org.jetbrains.kotlin'
    }

    testRuntime("org.jetbrains.spek:spek-junit-platform-engine:$spekVersion") {
        exclude group: 'org.junit.platform'
        exclude group: 'org.jetbrains.kotlin'
    }

    testAgent("org.jacoco:org.jacoco.agent:0.8.1:runtime")
}

compileKotlin { kotlinOptions { jvmTarget = "1.8" } }
compileTestKotlin { kotlinOptions { jvmTarget = "1.8" } }

tasks.withType(JavaExec) {
    if (it.name == 'junitPlatformTest') {
        doFirst {
            jvmArgs "-javaagent:${configurations.testAgent.singleFile}=destfile=${project.buildDir.name}/jacoco/test.exec"
        }
    }
}